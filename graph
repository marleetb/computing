package proj2;
import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;
import javax.swing.JPanel;
	
	public class graph extends JPanel {
		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;
		static int x = 50;
	    static int y = 60;
	    static int sizes = 50;
	    public static int recall1;
		public static int recall2;
		public static int recall3;
		public static int recall4;
		public static int recall1one,recall2one,recall3one,recall4one,
		recall1two,recall2two,recall3two,recall4two,
		recall1three,recall2three,recall3three,recall4three,
		recall1four,recall2four,recall3four,recall4four,
		recall1five,recall2five,recall3five,recall4five;
	    public static int green;
	    public static int cyan;
	    public static int yellow;
	    public static int red;
		
	    public void paintComponent(Graphics g){

			super.paintComponent(g);
			
			//creates  background
			g.setColor(Color.DARK_GRAY);
			g.fillRect(40, 50, 500, 500);
			g.setColor(Color.black);
			g.fillRect(30, 40, 10, 510);
			g.setColor(Color.black);
			g.fillRect(540, 40, 10, 510);
			g.setColor(Color.black);
			g.fillRect(30, 40, 520, 10);
			g.setColor(Color.black);
			g.fillRect(30, 540, 520, 10);

			int space = 0;recall1=0;recall2=0;recall3=0;recall4=0;
			
					for(int downw=8; downw>1; downw--){
					//makes 7 rows
						for(int randoms=0; randoms<8; randoms++){
							//creates 8 balls along each row
								
								Random randomNum = new Random();
								int rand = randomNum.nextInt(4);
								
										if(rand==0){
											//green
											g.setColor(Color.GREEN);	 
											g.fillOval(x, y, sizes, sizes);
											x=x+60;			
											recall1++;

										}if(rand==1){
											//cyan
											g.setColor(Color.CYAN);	 
											g.fillOval(x, y, sizes, sizes);
											x=x+60;
											recall2++;

										}if(rand==2){
											//yellow
											g.setColor(Color.YELLOW);	 
											g.fillOval(x, y, sizes, sizes);
											x=x+60;
											recall3++;

										}if(rand==3){
											//red
											g.setColor(Color.RED);	 
											g.fillOval(x, y, sizes, sizes);
											x=x+60;
											recall4++;

										}
						}
							x=50;
							y=y+70;
							space++;
					}

					//go round for loop every time
					
					if(recall1one==0){
						recall1one=recall1+recall1one;
					}if(recall2one==0){
						recall2one=recall2+recall2one;
					}if(recall3one==0){
						recall3one=recall3+recall3one;
					}if(recall4one==0){
						recall4one=recall4+recall4one;
					}
					if(recall1two==0){
						recall1two=recall1+recall1two;
					}if(recall2two==0){
						recall2two=recall2+recall2two;
					}if(recall3two==0){
						recall3two=recall3+recall3two;
					}if(recall4two==0){
						recall4two=recall4+recall4two;
					}
					if(recall1three==0){
						recall1three=recall1+recall1three;
					}if(recall2three==0){
						recall2three=recall2+recall2three;
					}if(recall3three==0){
						recall3three=recall3+recall3three;
					}if(recall4three==0){
						recall4three=recall4+recall4three;
					}
					if(recall1four==0){
						recall1four=recall1+recall1four;
					}if(recall2four==0){
						recall2four=recall2+recall2four;
					}if(recall3four==0){
						recall3four=recall3+recall3four;
					}if(recall4four==0){
						recall4four=recall4+recall4four;
					}
					if(recall1five==0){
						recall1five=recall1+recall1five;
					}if(recall2five==0){
						recall2five=recall2+recall2five;
					}if(recall3five==0){
						recall3five=recall3+recall3five;
					}if(recall4five==0){
						recall4five=recall1+recall4five;
					}
					//set variables for scores  that can be shown later
					
					green=recall1one+recall1two+recall1three+recall1four+recall1five;
					cyan=recall2one+recall2two+recall2three+recall2four+recall2five;
					yellow=recall3one+recall3two+recall3three+recall3four+recall3five;
					red=recall4one+recall4two+recall4three+recall4four+recall4five;
					
					y=60;
		}
}
